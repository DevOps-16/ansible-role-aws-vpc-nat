---

- name: ensure array is defined correctly
  assert:
    that:
      # subnet_filter OR subnet_name must be defined
      - natgw.subnet_filter is defined or natgw.subnet_name is defined
      # subnet_filter AND subnet_name must not be defined at the same time
      - not (natgw.subnet_filter is defined and natgw.subnet_name is defined)
    msg: "aws_vpc_nat_gateway[x].subnet_filter XOR subnet_name must be defined"


###
### gather subnet facts
###
- include_tasks: gather_subnet_facts_by_filter.yml
  when:
    - natgw.subnet_filter is defined

- include_tasks: gather_subnet_facts_by_name.yml
  when:
    - natgw.subnet_name is defined


###
### create nat gateway if not exists
###
- name: "create nat gateway for Subnet with ID {{ _aws_subnet_id }}"
  ec2_vpc_nat_gateway:
    # Fixed values
    state: present
    if_exist_do_not_create: True
    wait: True
    wait_timeout: 300
    # Looked-up values
    subnet_id: "{{ _aws_subnet_id }}"
    # Optional values
    region: "{{ natgw.region | default(aws_vpc_nat_default_region | default(omit)) }}"
    aws_access_key: "{{ lookup('ENV', 'AWS_ACCESS_KEY') | default(omit) }}"
    aws_secret_key: "{{ lookup('ENV', 'AWS_SECRET_KEY') | default(omit)  }}"
    security_token: "{{ lookup('ENV', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    profile: "{{ aws_vpc_nat_profile | default(omit) }}"
  register: _aws_vpc_nat_facts

###
### create tags if defined
###
- name: "create tags for nat gateway with id {{ _aws_vpc_nat_facts.nat_gateway_id }}"
  ec2_tag:
    # Fixed values
    state: present
    # Looked-up values
    resource: "{{ _aws_vpc_nat_facts.nat_gateway_id }}"
    # Required values
    tags: "{{ natgw.tags | get_attr('key', 'val') }}"
    # Optional values
    region: "{{ natgw.region | default(aws_vpc_nat_default_region | default(omit)) }}"
    aws_access_key: "{{ lookup('ENV', 'AWS_ACCESS_KEY') | default(omit) }}"
    aws_secret_key: "{{ lookup('ENV', 'AWS_SECRET_KEY') | default(omit)  }}"
    security_token: "{{ lookup('ENV', 'AWS_SECURITY_TOKEN') | default(omit) }}"
    profile: "{{ aws_vpc_nat_profile | default(omit) }}"
  when: natgw.tags is defined
